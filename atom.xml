<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WZY</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-28T02:43:55.605Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wzy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>傅里叶变换推导</title>
    <link href="http://yoursite.com/2020/03/28/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E6%8E%A8%E5%AF%BC/"/>
    <id>http://yoursite.com/2020/03/28/傅里叶变换推导/</id>
    <published>2020-03-28T02:12:57.685Z</published>
    <updated>2020-03-28T02:43:55.605Z</updated>
    
    <content type="html"><![CDATA[<h1 id="傅里叶变换"><a href="#傅里叶变换" class="headerlink" title="傅里叶变换"></a>傅里叶变换</h1><p>刚刚学了一点傅里叶变换，想着怎么推导一下公式，所以就在博主那里学习了一下推导，如下</p><h2 id="三角正交基是什么？"><a href="#三角正交基是什么？" class="headerlink" title="三角正交基是什么？"></a>三角正交基是什么？</h2><p><img src="/2020/03/28/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E6%8E%A8%E5%AF%BC/1.png" alt><br>在这个集合中任意两个函数不同的函数在一个周期内的上下定积分为0。则称在区间(t1,t2)内正交（内即为0）举一个最简单的例子:<br><img src="/2020/03/28/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E6%8E%A8%E5%AF%BC/2.png" alt><br>sin2x是奇函数，在上（-π，+π）的积分为0.其他的都是一样的.</p><h2 id="傅里叶级数的公式的推导"><a href="#傅里叶级数的公式的推导" class="headerlink" title="傅里叶级数的公式的推导"></a>傅里叶级数的公式的推导</h2><p>任意一个周期函数f(t)都能通过无限三角函数叠加得到<br><img src="/2020/03/28/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E6%8E%A8%E5%AF%BC/3.png" alt><br>书上公式<br><img src="/2020/03/28/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E6%8E%A8%E5%AF%BC/4.png" alt><br>上图就是书上公式<br>1.现在我们来求a0，an，bn<br>①求a0；两边同时在一个周期内积分<br><img src="/2020/03/28/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E6%8E%A8%E5%AF%BC/5.png" alt><br><img src="/2020/03/28/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E6%8E%A8%E5%AF%BC/6.png" alt>  </p><h2 id="欢迎讨论与学习"><a href="#欢迎讨论与学习" class="headerlink" title="欢迎讨论与学习"></a>欢迎讨论与学习</h2><p>title: 傅里叶变换推导<br>date: 2020-03-28 10:12:57</p><h2 id="tags-学习"><a href="#tags-学习" class="headerlink" title="tags:学习"></a>tags:学习</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;傅里叶变换&quot;&gt;&lt;a href=&quot;#傅里叶变换&quot; class=&quot;headerlink&quot; title=&quot;傅里叶变换&quot;&gt;&lt;/a&gt;傅里叶变换&lt;/h1&gt;&lt;p&gt;刚刚学了一点傅里叶变换，想着怎么推导一下公式，所以就在博主那里学习了一下推导，如下&lt;/p&gt;
&lt;h2 id=&quot;三角正交
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>blog之旅</title>
    <link href="http://yoursite.com/2020/03/20/blog%E4%B9%8B%E6%97%85/"/>
    <id>http://yoursite.com/2020/03/20/blog之旅/</id>
    <published>2020-03-20T11:06:59.874Z</published>
    <updated>2020-03-25T12:26:47.516Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建自己的网站"><a href="#搭建自己的网站" class="headerlink" title="搭建自己的网站"></a>搭建自己的网站</h1><h2 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h2><p>选择你的操作系统，我的是在 Windows 环境下安装 Node.js，只需要到官网下载安装即可     <a href="https://nodejs.org/en/download/,下载即可。" target="_blank" rel="noopener">https://nodejs.org/en/download/,下载即可。</a><br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/2.png" alt>   </p><p>git官网  </p><hr><p>这里只介绍windows版本下配置<br><a href="http://gitforwindows.org/" target="_blank" rel="noopener">http://gitforwindows.org/</a><br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/3.png" alt><br>然后下图配置git<br>在Windows Explorer integration选项中将“Git Bash here”和“Git GUI here”打对勾<br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/4.png" alt><br>在“Adjusting your PATH environment”选项中，默认即可<br>在“Configuring the line ending conversions”选项中，<br>第一个选项：如果是跨平台项目，在windows系统安装，选择；<br>第二个选项：如果是跨平台项目，在Unix系统安装，选择；<br>第三个选项：非跨平台项目，选择。<br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/5.png" alt><br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/6.png" alt><br>安装完成后，单机右键可以看到Git GUI Here和Git Bash Here（我们将用第二个)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure><p>创建Hexo文件夹<br>安装完成后，根据自己喜好建立目录（如D:\wzyblog），直接进入D:\wzyblog文件夹下右键鼠标，点击Git Bash Here，进入Git命令框，执行以下操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>运行完如下图<br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/7.png" alt><br>如果命令无法运行，可以尝试更换taobao的npm源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>创建一个Hexo文件夹<br>安装完成后，根据自己喜好建立目录（如F:\Blog\Hexo），直接进入F:\Blog\Hexo文件夹下右键鼠标，点击Git Bash Here，进入Git命令框，执行以下操作<br>安装Hexo插件<br>将下面的插件都安装完。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked@0.2 --save</span><br><span class="line">npm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">npm install hexo-generator-feed@1 --save</span><br><span class="line">npm install hexo-generator-sitemap@1 --save</span><br></pre></td></tr></table></figure><p>运行如下代码可在本地查看  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>过后此代码可已变成,输入更加方便  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>本地运行窗口如下<br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/8.png" alt><br><strong>将博客部署到Github Pages上</strong>  </p><ol><li>注册GitHub账户  </li><li>创建代码库，点击New repository  </li><li>项目名字必须为  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usename.github.io</span><br></pre></td></tr></table></figure><p>这是官方规定的，也是你将来的域名<br>在下面的Initialize this repository with a README打勾，然后创建项目库</p><ol start="4"><li>配置SSH密钥</li><li>首先查看本机是否存在SSH密钥，打开Git Bash，输入</li><li>输入</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al ~&#x2F;.ssh</span><br></pre></td></tr></table></figure><ol start="7"><li>如果不存在此目录，则进行第二步操作，否则，你本机已经存在ssh公钥和私钥，可以略过第二步，直接进入第三步操作。</li><li>创建一对新的SSH密钥(keys)<br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/10.png" alt>  </li><li>这将按照你提供的邮箱地址，创建一对密钥</li><li>直接回车，则将密钥按默认文件进行存储。此时也可以输入特定的文件名，比如/c/Users/you/.ssh/github_rsa</li><li>接着，根据提示，你需要输入密码和确认密码（如果你很放心，可以不用密码，就是到输密码的地方，都直接回车，所以每次push就只管回车就行了)。 相关提示</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):[Type a passphrase]</span><br><span class="line">Enter same passphrase again:[Type passphrase again]</span><br></pre></td></tr></table></figure><p>输入完成之后，屏幕会显示如下信息：<br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/10.png" alt><br><strong>在GitHub账户中添加你的公钥  </strong><br>运行如下命令，将公钥的内容复制到系统粘贴板(clipboard)中。<br>clip &lt; ~/.ssh/id_rsa.pub<br>登陆GitHub,进入你的Account Settings.<br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/9.png" alt><br>选择SSH Keys<br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/12.png" alt><br>新建一个，title随意填写，key粘贴刚刚的就行<br>可以输入下面的命令，看看设置是否成功，<a href="mailto:git@github.com">git@github.com</a>的部分不要修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>得到下图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host&#39;github.com (206.7.277.239)&#39;can&#39;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:27:36:63:1b:56:7d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)?</span><br></pre></td></tr></table></figure><p>输入yes就好，然后会看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi usename! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>SSH Key就配置成功了<br><strong>将本地的Hexo文件更新到Github的库中  </strong><br>登录Github打开自己的项目 username.github.io，打开后，复制链接<br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/13.png" alt><br>打开你一开始创建的Hexo文件夹（如D:\wzyblog），用记事本打开刚文件夹下的_config.yml文件<br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/14.png" alt><br>在yml配置文件里，应该是最下面，repository就填你刚刚复制的链接<br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/15.png" alt><br>注意:yml里冒号后面必须是空格，再加文字，记得所有设置参数属性末尾都要加空格<br>如下图<br><img src="/2020/03/20/blog%E4%B9%8B%E6%97%85/16.png" alt><br>然后在Hexo文件夹下右键，Git Bash   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line">或直接</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>执行完之后会让你输入github的账号和密码，输入完后就可以登录我们自己的部署在Github Pages服务器上的博客了。对应的地址是 username.github.io  </p><h2 id="在浏览器上输入自己的主页地址即可看到我们自己的博客，暂时更新到这里，下期讲如何美化"><a href="#在浏览器上输入自己的主页地址即可看到我们自己的博客，暂时更新到这里，下期讲如何美化" class="headerlink" title="在浏览器上输入自己的主页地址即可看到我们自己的博客，暂时更新到这里，下期讲如何美化"></a>在浏览器上输入自己的主页地址即可看到我们自己的博客，暂时更新到这里，下期讲如何美化</h2><p>title: blog之旅<br>date: 2020-03-20 19:06:59</p><h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;搭建自己的网站&quot;&gt;&lt;a href=&quot;#搭建自己的网站&quot; class=&quot;headerlink&quot; title=&quot;搭建自己的网站&quot;&gt;&lt;/a&gt;搭建自己的网站&lt;/h1&gt;&lt;h2 id=&quot;1-安装Node-js&quot;&gt;&lt;a href=&quot;#1-安装Node-js&quot; class=&quot;he
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>stm32f10X</title>
    <link href="http://yoursite.com/2020/03/05/stm32f10X/"/>
    <id>http://yoursite.com/2020/03/05/stm32f10X/</id>
    <published>2020-03-05T04:06:40.479Z</published>
    <updated>2020-03-05T04:02:10.839Z</updated>
    
    <content type="html"><![CDATA[<h1 id="单片机"><a href="#单片机" class="headerlink" title="单片机"></a>单片机</h1><h2 id="stm32f103配置库函数，今天从头配置了一下代码感觉了一下，试试markdown的图片上传"><a href="#stm32f103配置库函数，今天从头配置了一下代码感觉了一下，试试markdown的图片上传" class="headerlink" title="##stm32f103配置库函数，今天从头配置了一下代码感觉了一下，试试markdown的图片上传  "></a>##stm32f103配置库函数，今天从头配置了一下代码感觉了一下，试试markdown的图片上传<img src="/images/1.png" alt>  </h2><p>title: stm32f10X<br>date: 2020-03-03 22:00:39</p><h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;单片机&quot;&gt;&lt;a href=&quot;#单片机&quot; class=&quot;headerlink&quot; title=&quot;单片机&quot;&gt;&lt;/a&gt;单片机&lt;/h1&gt;&lt;h2 id=&quot;stm32f103配置库函数，今天从头配置了一下代码感觉了一下，试试markdown的图片上传&quot;&gt;&lt;a href=&quot;#st
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hello-world</title>
    <link href="http://yoursite.com/2020/02/29/hello-world/"/>
    <id>http://yoursite.com/2020/02/29/hello-world/</id>
    <published>2020-02-29T11:43:43.016Z</published>
    <updated>2020-02-29T11:49:37.637Z</updated>
    
    <content type="html"><![CDATA[<p>—第一次建立个网站，折腾了一上午，本来想着去阿里云买个域名，也不贵，一年7元吧，但后来还是决定部署github了，不花钱可能就是名字没有那么高大尚！折腾个网站也就是记录记录干了些什么，以后能回忆回忆，哈哈哈。还有些功能还没探索，慢慢来吧，顺便用用Markdown，主要它支持多平台MacOS 、Windows、Linux,等下一期就把建网站过程纪录一下吧！<br>title: hello world<br>date: 2020-02-29 19:43:43</p><h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;—第一次建立个网站，折腾了一上午，本来想着去阿里云买个域名，也不贵，一年7元吧，但后来还是决定部署github了，不花钱可能就是名字没有那么高大尚！折腾个网站也就是记录记录干了些什么，以后能回忆回忆，哈哈哈。还有些功能还没探索，慢慢来吧，顺便用用Markdown，主要它支持
      
    
    </summary>
    
    
  </entry>
  
</feed>
